{"ast":null,"code":"var _jsxFileName = \"/home/f2156/personal/react/react-course/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport About from \"./components/About\";\nimport Alert from './components/Alert';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1000);\n  };\n  const NavMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = 'grey';\n      showAlert(\"Dark Mode enabled\", \"success\");\n    } else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light Mode enabled\", \"success\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      title: \"REACT\",\n      about: \"About Us\",\n      mode: mode,\n      NavMode: NavMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        alert: alert\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-3\",\n      children: /*#__PURE__*/_jsxDEV(TextForm, {\n        showAlert: showAlert,\n        heading: \"Enter the text\",\n        mode: mode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"yynMwYg97c38tJfP/35WTBv6oDs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Navbar","TextForm","About","Alert","App","mode","setMode","alert","setAlert","showAlert","message","type","msg","setTimeout","NavMode","document","body","style","backgroundColor"],"sources":["/home/f2156/personal/react/react-course/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport About from \"./components/About\";\nimport Alert from './components/Alert';\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n  \n  const showAlert = (message,type) => {\n    setAlert({\n      msg: message,\n      type: type\n    })\n      setTimeout(() => {\n        setAlert(null);\n      }, 1000);\n  };\n\n  const NavMode = () => {\n    if(mode==='light'){\n      setMode('dark');\n      document.body.style.backgroundColor = 'grey';\n      showAlert(\"Dark Mode enabled\", \"success\");\n    }else{\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light Mode enabled\", \"success\");\n    }\n  };\n  return (\n    <>\n      \n      <Navbar title=\"REACT\" about=\"About Us\" mode = {mode} NavMode={NavMode}/>\n      <div className='container'>\n      <Alert alert={alert}/>\n      </div>\n      <div className=\"container my-3\">\n        <TextForm showAlert={showAlert} heading=\"Enter the text\" mode={mode} />\n      </div>\n      {/* <About /> */}\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,KAAK,MAAM,oBAAoB;AAAC;AAAA;AAEvC,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,OAAO,CAAC;EACzC,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMU,SAAS,GAAG,CAACC,OAAO,EAACC,IAAI,KAAK;IAClCH,QAAQ,CAAC;MACPI,GAAG,EAAEF,OAAO;MACZC,IAAI,EAAEA;IACR,CAAC,CAAC;IACAE,UAAU,CAAC,MAAM;MACfL,QAAQ,CAAC,IAAI,CAAC;IAChB,CAAC,EAAE,IAAI,CAAC;EACZ,CAAC;EAED,MAAMM,OAAO,GAAG,MAAM;IACpB,IAAGT,IAAI,KAAG,OAAO,EAAC;MAChBC,OAAO,CAAC,MAAM,CAAC;MACfS,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,MAAM;MAC5CT,SAAS,CAAC,mBAAmB,EAAE,SAAS,CAAC;IAC3C,CAAC,MAAI;MACHH,OAAO,CAAC,OAAO,CAAC;MAChBS,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,OAAO;MAC7CT,SAAS,CAAC,oBAAoB,EAAE,SAAS,CAAC;IAC5C;EACF,CAAC;EACD,oBACE;IAAA,wBAEE,QAAC,MAAM;MAAC,KAAK,EAAC,OAAO;MAAC,KAAK,EAAC,UAAU;MAAC,IAAI,EAAIJ,IAAK;MAAC,OAAO,EAAES;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAE,eACxE;MAAK,SAAS,EAAC,WAAW;MAAA,uBAC1B,QAAC,KAAK;QAAC,KAAK,EAAEP;MAAM;QAAA;QAAA;QAAA;MAAA;IAAE;MAAA;MAAA;MAAA;IAAA,QAChB,eACN;MAAK,SAAS,EAAC,gBAAgB;MAAA,uBAC7B,QAAC,QAAQ;QAAC,SAAS,EAAEE,SAAU;QAAC,OAAO,EAAC,gBAAgB;QAAC,IAAI,EAAEJ;MAAK;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QACnE;EAAA,gBAEL;AAEP;AAAC,GAtCQD,GAAG;AAAA,KAAHA,GAAG;AAwCZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}